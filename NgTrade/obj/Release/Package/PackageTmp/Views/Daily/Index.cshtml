@using NgTrade.Helpers.Paging
@model NgTrade.Models.ViewModel.DailyViewModel
@{
  ViewBag.Title = "Nigerian Stock Exchange Trading Online NSE Daily Price List - NgTradeOnline";
}

<div class="content">
  <div class="container">
    @if (!Model.Quotes.Any())
    {
      <div>No data is available.</div>
    }
    else
    {
      <div class="page-header">
        <h3>Nigeria stock exchange daily price list for @string.Format("{0:ddd, MMM d, yyyy}", Model.Quotes.FirstOrDefault().Date)</h3>
      </div>
      <!-- Split button -->
      <div class="row-fluid">
        <ul class="thumbnails">
          <li class="span4">
            <div class="btn-group">
              @if (!string.IsNullOrWhiteSpace(Model.SectorFilter))
              {
                <button type="button" id="btnClearFilter" class="btn btn-success">Clear filter</button>
              }
              else
              {
                <button type="button" class="btn btn-success">Filter by industry</button>
              }
              <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown">
                <span class="caret"></span>
              </button>
                <ul class="dropdown-menu" role="menu">
                    @foreach (var sector in Model.Sectors)
                    {
                        if (!string.IsNullOrWhiteSpace(sector))
                        {
                            <li><a href="/Daily/Index?sector=@sector">@sector</a></li>
                        }
                    }
                </ul>
        </div>
          </li>
         @* <li>
            @using (Html.BeginForm("Research", "Home", FormMethod.Post, new {@class = "form-search"}))
            {
              <div class="col-lg-6">
                <div class="input-group">
                  <input type="text" class="form-control" id="datefilter">
                  <span class="input-group-btn">
                    <button class="btn btn-default" type="button">Filter by date!</button>
                  </span>
                </div><!-- /input-group -->
              </div><!-- /.col-lg-6 -->
            }
          </li>*@
        </ul>
      <div class="fb-like" data-href="https://www.facebook.com/NgTradeOnlinense" data-colorscheme="light" data-layout="button" data-action="like" data-show-faces="true" data-send="true"></div>
            
            <a href="https://twitter.com/ngtradeonline" class="twitter-follow-button" data-show-count="false" data-size="large">Follow @@ngtradeonline</a>
            <script>
                !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'twitter-wjs');
            </script>
        <a href="https://twitter.com/share" class="twitter-share-button" data-via="ngtradeonline" data-size="large" data-related="ngtradeonline" data-hashtags="ngtradeonline">Tweet</a>
<script>!function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } }(document, 'script', 'twitter-wjs');</script>

      </div>
      <div class="panel panel-default">
        <table class="table">
          <thead>
            <tr>
              <th>Symbol</th>
              <th>Low</th>
              <th>Open</th>
              <th>Price</th>
              <th>Volume</th>
              <th>High</th>
              <th>Change</th>
              <th>Action</th>
            </tr>
          </thead>
          <tbody>
            @foreach (var data in Model.Quotes)
            {
              if (data.Close > data.Open)
              {
                <tr>
                <td>@Html.ActionLink(@data.Symbol,"Research", "Home", new {stockTicker = @data.Symbol}, null)</td>
                <td>@String.Format("{0:0.00}", data.Low)</td>
                <td>@String.Format("{0:0.00}", data.Open)</td>
                <td>@String.Format("{0:0.00}", data.Close)</td>
                <td>@data.Volume</td>
                   <td>@String.Format("{0:0.00}", data.High)</td>
                    <td style="color: green">@String.Format("{0:0.00}", data.Change1)</td>
                    <td>
                                     @Html.ActionLink("Buy/Sell", "Trade", "Account", new { symbol = data.Symbol }, new { @class="btn"})
                                </td>
              </tr>
              }
              else if (data.Close < data.Open)
              {
                <tr>
                <td>@Html.ActionLink(@data.Symbol,"Research", "Home", new {stockTicker = @data.Symbol}, null)</td>
                <td>@String.Format("{0:0.00}", data.Low)</td>
                <td>@String.Format("{0:0.00}", data.Open)</td>
                <td>@String.Format("{0:0.00}", data.Close)</td>
                <td>@data.Volume</td>
                <td>@String.Format("{0:0.00}", data.High)</td>
                    <td style="color: red">@String.Format("{0:0.00}", data.Change1)</td>
                    <td>
                                     @Html.ActionLink("Buy/Sell", "Trade", "Account", new { symbol = data.Symbol }, new { @class="btn"})
                                </td>
              </tr>
              }
              else
              {
               <tr>
                <td>@Html.ActionLink(@data.Symbol,"Research", "Home", new {stockTicker = @data.Symbol}, null)</td>
                <td>@String.Format("{0:0.00}", data.Low)</td>
                <td>@String.Format("{0:0.00}", data.Open)</td>
                <td>@String.Format("{0:0.00}", data.Close)</td>
                <td>@data.Volume</td>
                <td>@String.Format("{0:0.00}", data.High)</td>
                   <td>@String.Format("{0:0.00}", data.Change1)</td>
                   <td>
                                     @Html.ActionLink("Buy/Sell", "Trade", "Account", new { symbol = data.Symbol }, new { @class="btn"})
                                </td>
              </tr> 
              }
            }
          </tbody>
        </table>   
      </div>
      <div class="pagination pagination-centered">
        <ul>
          @Html.PageLinks(Model.PagingInfo, x => Url.Action("Index", new { page = x, sector = Model.SectorFilter }))
        </ul>
      </div>
    }
  </div>
</div><!-- End: MAIN CONTENT -->